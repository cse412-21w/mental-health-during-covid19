{"version":3,"sources":["covid.js"],"names":["options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","dataArray","stateArray","d3","csv","casedata","then","data","forEach","d","parseDate","utcParse","date","state","cases","deaths","push","includes","drawLineVegaLite","sort","selection","selectSingle","fields","bind","menu","markLine","select","transform","filter","encode","x","fieldT","y","fieldQ","width","height","death","hconcat","spacing","render","viewElement","document","getElementById","appendChild"],"mappings":"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","file":"covid.22ccf8ba.js","sourceRoot":"..\\testsrc","sourcesContent":["import casedata from '../static/us-states.csv'    // import dataset\r\n\"use strict\";     // the code should be executed in \"strict mode\".\r\n                  // With strict mode, you can not, for example, use undeclared variables\r\n\r\n\r\nconst options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\nvar dataArray = []\r\nvar stateArray = []\r\n\r\nd3.csv(casedata).then(function(data) {\r\n  data.forEach(function(d){\r\n    const parseDate = d3.utcParse(\"%Y-%m-%d\");\r\n    var date = parseDate(d.date);\r\n    var state = d.state;\r\n    var cases = +d.cases;\r\n    var deaths = +d.deaths;\r\n    dataArray.push({date: date, state: state, cases: cases, deaths: deaths})\r\n    if (!stateArray.includes(state)) {\r\n      stateArray.push(state)\r\n    }\r\n  })\r\n  drawLineVegaLite();\r\n});\r\n\r\nstateArray = stateArray.sort();\r\n\r\nfunction drawLineVegaLite() {\r\n\r\n  const selection = vl.selectSingle('Select')\r\n    .fields('state')\r\n    .init({'state': stateArray[0]})\r\n    .bind(vl.menu(stateArray))\r\n\r\n  const cases = vl.markLine()\r\n      .data(dataArray)\r\n      .select(selection)\r\n      .transform(\r\n        vl.filter(selection)\r\n      )\r\n      .encode(\r\n        vl.x().fieldT('date'),\r\n        vl.y().fieldQ('cases'),\r\n        vl.tooltip(['date', 'cases'])\r\n      )\r\n      .width(400)\r\n      .height(450);\r\n\r\n    const death = vl.markLine()\r\n        .data(dataArray)\r\n        .select(selection)\r\n        .transform(\r\n          vl.filter(selection)\r\n        )\r\n        .encode(\r\n          vl.x().fieldT('date'),\r\n          vl.y().fieldQ('deaths'),\r\n          vl.tooltip(['date', 'deaths'])\r\n        )\r\n        .width(400)\r\n        .height(450);\r\n\r\n  return vl.hconcat(cases, death).spacing(5)\r\n    .render()\r\n    .then(viewElement => {\r\n      // render returns a promise to a DOM element containing the chart\r\n      // viewElement.value contains the Vega View object instance\r\n      document.getElementById('covid-data').appendChild(viewElement);\r\n    });\r\n}"]}
{"version":3,"sources":["javasript/covidMap.js"],"names":["options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","drawLineVegaLite","Covid2019","layer","markGeoshape","stroke","strokeWidth","title","data","topojson","feature","transform","lookup","from","Covid_2019_Data","key","fields","encode","color","fieldQ","scale","scheme","legend","width","height","project","projection","Covid2020","Covid_2020_Data","hconcat","render","then","viewElement","document","getElementById","appendChild"],"mappings":"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","file":"covidMap.06d7672e.js","sourceRoot":"..\\src","sourcesContent":["import Covid_2019_Data from '../../static/adult_prevalance_2019.csv';    // import dataset\r\nimport Covid_2020_Data from '../../static/adult_mh_prevalance_2020 (2).csv'; \r\n\"use strict\";     // the code should be executed in \"strict mode\".\r\n                  // With strict mode, you can not, for example, use undeclared variables\r\n\r\nconst options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\ndrawLineVegaLite()\r\n\r\nfunction drawLineVegaLite() {\r\n\r\n    const Covid2019 = vl.layer (\r\n        vl.markGeoshape({stroke: '#aaa', strokeWidth: 0.25})\r\n        .title(\"Percentage of Adult with any Mental illness by State in 2019\")\r\n        .data(vl.topojson('data/us-10m.json').feature('states'))\r\n        .transform(\r\n          vl.lookup('id').from(vl.data(Covid_2019_Data).key('id').fields(['state', 'rank', 'percentage', 'number']))\r\n        )\r\n        .encode(\r\n          vl.color().fieldQ('percentage').scale({scheme: 'Reds'}).legend({title: 'Percentage (%)'})\r\n        )    \r\n   )\r\n        .width(400)\r\n        .height(300)\r\n        .config({view: {stroke: null}})\r\n      .project(vl.projection('albersUsa'))\r\n    \r\n    const Covid2020 = vl.layer (\r\n        vl.markGeoshape({stroke: '#aaa', strokeWidth: 0.25})\r\n        .title(\"Percentage of Adult with any Mental illness by State in 2020\")\r\n        .data(vl.topojson('data/us-10m.json').feature('states'))\r\n        .transform(\r\n          vl.lookup('id').from(vl.data(Covid_2020_Data).key('id ').fields(['state', 'rank', 'percentage', 'number']))\r\n        )\r\n        .encode(\r\n          vl.color().fieldQ('percentage').scale({scheme: 'Reds'}).legend({title: 'Percentage (%)'})\r\n        )    \r\n   )\r\n    .width(400)\r\n        .height(300)\r\n        .config({view: {stroke: null}})\r\n      .project(vl.projection('albersUsa'))\r\n\r\n    return vl.hconcat(Covid2019, Covid2020)\r\n    .render()\r\n    .then(viewElement => {\r\n      // render returns a promise to a DOM element containing the chart\r\n      // viewElement.value contains the Vega View object instance\r\n      document.getElementById('covid-Map-data').appendChild(viewElement);\r\n    });\r\n}\r\n"]}
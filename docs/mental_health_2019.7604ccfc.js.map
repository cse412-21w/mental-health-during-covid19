{"version":3,"sources":["javasript/mental_health_2019.js"],"names":["options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","dataArray","drawLineVegaLite","markBar","data","mhdata","encode","column","fieldN","spacing","title","y","fieldQ","x","sort","axis","color","width","height","render","then","viewElement","document","getElementById","appendChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAA4D;AAC5D,cAAkB;AACA;;;AAElB,IAAMA,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,CACN;AADM,GADM;AAIdC,EAAAA,IAAI,EAAE,cAACC,IAAD,EAAU;AACd;AACAA,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAIC,WAAW,CAACC,OAAhB,GAA0BC,IAAvC;AACD,GAPa;AAQdJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE;AANN;AARQ,CAAhB;AAkBAC,EAAE,CAACC,QAAH,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4BZ,OAA5B;AAEA,IAAIa,SAAS,GAAG,EAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,gBAAgB;;AAChB,SAASA,gBAAT,GAA4B;AAE1BL,EAAAA,EAAE,CAACM,OAAH,GACGC,IADH,CACQC,uBADR,EAEGC,MAFH,CAGMT,EAAE,CAACU,MAAH,GAAYC,MAAZ,CAAmB,MAAnB,EAA2BC,OAA3B,CAAmC,EAAnC,EAAuCC,KAAvC,CAA6C,IAA7C,CAHN,EAIMb,EAAE,CAACc,CAAH,GAAOC,MAAP,CAAc,YAAd,CAJN,EAKMf,EAAE,CAACgB,CAAH,GAAOL,MAAP,CAAc,MAAd,EACGM,IADH,CACQjB,EAAE,CAACe,MAAH,CAAU,YAAV,CADR,EAEGG,IAFH,CAEQ;AAACL,IAAAA,KAAK,EAAE;AAAR,GAFR,CALN,EAQMb,EAAE,CAACmB,KAAH,GAAWR,MAAX,CAAkB,MAAlB,CARN,EASMX,EAAE,CAACL,OAAH,CAAW,CAACK,EAAE,CAACW,MAAH,CAAU,MAAV,CAAD,EAAoBX,EAAE,CAACe,MAAH,CAAU,YAAV,CAApB,CAAX,CATN,EAWGK,KAXH,CAWS,GAXT,EAYGC,MAZH,CAYU,GAZV,EAaGC,MAbH,GAcGC,IAdH,CAcQ,UAAAC,WAAW,EAAI;AACjB;AACA;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,WAAlC,CAA8CH,WAA9C;AACH,GAlBH;AAmBD","file":"mental_health_2019.7604ccfc.js","sourceRoot":"../src","sourcesContent":["import mhdata from '../../static/mental_health_2019.csv'    // import dataset\n\"use strict\";     // the code should be executed in \"strict mode\".\n                  // With strict mode, you can not, for example, use undeclared variables\n\nconst options = {\n  config: {\n    // Vega-Lite default configuration\n  },\n  init: (view) => {\n    // initialize tooltip handler\n    view.tooltip(new vegaTooltip.Handler().call);\n  },\n  view: {\n    // view constructor options\n    // remove the loader if you don't want to default to vega-datasets!\n    //   loader: vega.loader({\n    //     baseURL: \"\",\n    //   }),\n    renderer: \"canvas\",\n  },\n};\n\nvl.register(vega, vegaLite, options);\n\nvar dataArray = []\n/*\nd3.csv(mhdata).then(function(data) {\n  data.forEach(function(d){\n    var type = d.type;\n    var race = +d.race;\n    var percentage = +d.percentage;\n    dataArray.push({type: type, race: race, percentage: percentage})\n  })\n  drawLineVegaLite();\n});*/\ndrawLineVegaLite();\nfunction drawLineVegaLite() {\n\n  vl.markBar()\n    .data(mhdata)\n    .encode(\n        vl.column().fieldN('type').spacing(10).title(null),\n        vl.y().fieldQ('percentage'),\n        vl.x().fieldN('race')\n          .sort(vl.fieldQ('percentage'))\n          .axis({title: null}),\n        vl.color().fieldN('race'),\n        vl.tooltip([vl.fieldN('race'), vl.fieldQ('percentage')])\n    )\n    .width(150)\n    .height(400)\n    .render()\n    .then(viewElement => {\n        // render returns a promise to a DOM element containing the chart\n        // viewElement.value contains the Vega View object instance\n        document.getElementById('md2019').appendChild(viewElement);\n    })\n}"]}
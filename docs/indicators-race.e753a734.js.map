{"version":3,"sources":["indicators-race.js"],"names":["races","indicators","time_periods","symptomtypes","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","drawIndicatorsGenderVegaLite","drawIndicatorsRaceVegaLite","drawCasesSymptomsVegaLite","selection2","selectSingle","fields","Indicator","bind","menu","name","markCircle","data","all_gender","title","select","encode","x","fieldO","sort","y","fieldQ","color","fieldN","opacity","if","value","width","height","render","then","viewElement","document","getElementById","appendChild","selection","SymptomType","merge_race","brush","selectInterval","encodings","cases","markArea","merge","fieldT","mh","legend","orient","vconcat","spacing"],"mappings":"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","file":"indicators-race.e753a734.js","sourceRoot":"..\\testsrc","sourcesContent":["import anxiety_gender from '../static/anxiety_gender.csv';\r\nimport all_race from '../static/all_race.csv';   // import dataset\r\nimport merge from '../static/merge.csv';\r\n//import newcases from '../static/newcases_period.csv';\r\nimport all_gender from '../static/all_gender.csv';\r\nimport merge_race from '../static/merge_race.csv';\r\n\r\n\"use strict\";     // the code should be executed in \"strict mode\".\r\n                  // With strict mode, you can not, for example, use undeclared variables\r\n\r\nvar races = ['Hispanic or Latino', 'Non-Hispanic white, single race', 'Non-Hispanic black, single race',\r\n'Non-Hispanic Asian, single race', 'Non-Hispanic, other races and multiple races'];   // used to store data later\r\nvar indicators = ['Symptoms of Depressive Disorder', 'Symptoms of Anxiety Disorder', \r\n'Symptoms of Anxiety Disorder or Depressive Disorder'];\r\nvar time_periods = ['Apr 23 - May 5', 'May 7 - May 12', 'May 14 - May 19', 'May 21 - May 26',\r\n                'May 28 - June 2', 'June 4 - June 9', 'June 11 - June 16', 'June 18 - June 23', \r\n                'June 25 - June 30', 'July 2 - July 7', 'July 9 - July 14', 'July 16 - July 21',\r\n                'Aug 19 - Aug 31', 'Sep 2 - Sep 14', 'Sep 16 - Sep 28', 'Sep 30 - Oct 12',\r\n                'Oct 14 - Oct 26', 'Oct 28 - Nov 9', 'Nov 11 - Nov 23', 'Nov 25 - Dec 7', \r\n                'Dec 9 - Dec 21', 'Jan 6 - Jan 18', 'Jan 20 - Feb 1'];\r\nvar symptomtypes = ['Anxiety', 'Depressive', 'Anxiety or Depressive']\r\n\r\nconst options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\ndrawIndicatorsGenderVegaLite();\r\ndrawIndicatorsRaceVegaLite();\r\ndrawCasesSymptomsVegaLite();\r\n\r\nfunction drawIndicatorsGenderVegaLite() {\r\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\r\n  // your visualization goes here \r\n  const selection2 = vl.selectSingle('Select')\r\n  .fields('Indicator')\r\n  .init({Indicator: 'Symptoms of Anxiety Disorder'})\r\n  .bind({Indicator: vl.menu(indicators).name('Symptom Type: ')});\r\n\r\n  return vl.markCircle()\r\n    .data(all_gender)\r\n    .title(['% of US Adults with Symptoms of Anxiety and', 'Depressive Disorder by Gender, April 2020 - February 2021'])\r\n    .select(selection2)\r\n    .encode(\r\n      vl.x({title: 'Time Period'}).fieldO('TimePeriodLabel').sort(time_periods),\r\n      vl.y({title: '% of the US Adult Population'}).fieldQ('Value'),\r\n      vl.color({title: 'Gender'}).fieldN('Subgroup'),\r\n      vl.tooltip('Value'),\r\n      vl.opacity().if(selection2, vl.value(1)).value(0)\r\n  )\r\n  .width(450)\r\n  .height(450)\r\n  .render()\r\n  .then(viewElement => {\r\n    // render returns a promise to a DOM element containing the chart\r\n    // viewElement.value contains the Vega View object instance\r\n    document.getElementById('ind-gender').appendChild(viewElement);\r\n  }); \r\n}\r\n\r\nfunction drawIndicatorsRaceVegaLite() {\r\n  /*const selection = vl.selectSingle('Select')\r\n    .fields('Indicator', 'Subgroup')\r\n    .init({Indicator: 'Symptoms of Anxiety Disorder', Subgroup: 'Non-Hispanic black, single race'})\r\n    .bind({Indicator: vl.menu(indicators), Subgroup: vl.menu(races)});\r\n           \r\n     vl.markCircle()\r\n    .data(all_race)\r\n    .title('Symptoms of Anxiety and Depressive Disorder, April 2020 - February 2021')\r\n    .select(selection)\r\n    .encode(\r\n      vl.x({title: 'Time Period'}).fieldO('TimePeriodLabel').sort(time_periods),\r\n      vl.y({title: 'Percentage of population'}).fieldQ('Value'),\r\n      vl.tooltip().fieldQ('Value'),\r\n      vl.color({title: 'Race/Ethnicity'}).fieldN('Subgroup'),\r\n      vl.opacity().if(selection, vl.value(1)).value(0)\r\n    )\r\n    .width(450)\r\n    .height(450)\r\n    .render() */\r\n    const selection = vl.selectSingle('Select')\r\n    .fields('SymptomType')\r\n    .init({SymptomType: 'Anxiety'})\r\n    .bind({SymptomType: vl.menu(symptomtypes).name('Symptom Type: ')});\r\n           \r\n    vl.markCircle()\r\n    .data(merge_race)\r\n    .title(['% of US Adults with Symptoms of Anxiety and', 'Depressive Disorder by Race, April 2020 - February 2021'])\r\n    .select(selection)\r\n    .encode(\r\n      vl.x({title: 'Time Period'}).fieldO('TimePeriodLabel').sort(time_periods),\r\n      vl.y({title: '% of the US Adult Population'}).fieldQ('Value'),\r\n      vl.tooltip().fieldQ('Value'),\r\n      vl.color({title: 'Race/Ethnicity'}).fieldN('Subgroup2'),\r\n      vl.opacity().if(selection, vl.value(1)).value(0),\r\n    )\r\n    .width(450)\r\n    .height(450)\r\n    .render() \r\n    .then(viewElement => {\r\n    document.getElementById('ind-race').appendChild(viewElement);\r\n  });\r\n}\r\n\r\n\r\n// COVID cases and Anxiety/Depression \r\nfunction drawCasesSymptomsVegaLite() {\r\n  const brush = vl.selectInterval()\r\n  .encodings('x');\r\n\r\n  const cases = vl.markArea({color: 'teal'})\r\n    .data(merge)\r\n    .select(brush)\r\n    .encode(\r\n      vl.x({title: 'Date'}).fieldT('date').sort('ascending'),\r\n      vl.y({title: 'New COVID-19 Cases'}).fieldQ('newcases')\r\n    ).width(500).height(240)\r\n\r\n  const mh = vl.markCircle()\r\n    .data(merge)\r\n    .encode(\r\n      vl.x({title: 'Time Period'}).fieldO('TimePeriodLabel').sort(time_periods),\r\n      vl.y({title: 'Percentage of population'}).fieldQ('Value'),\r\n      vl.color().fieldN('SymptomType').legend({orient: 'bottom', title: 'Symptom Type'}),\r\n      vl.tooltip().fieldQ('Value'),\r\n      vl.opacity().if(brush, vl.value(1)).value(0.005)\r\n  ).width(500).height(240)\r\n\r\n  return vl.vconcat(cases, mh).spacing(5).title('New COVID-19 Cases and Symptoms of Anxiety and Depressive Disorder, Apr 2020 - Feb 2021')\r\n      //.width(450)\r\n      //.height(450)\r\n      .render()\r\n      .then(viewElement => {\r\n      document.getElementById('cases-mh').appendChild(viewElement);\r\n    });\r\n} \r\n\r\n\r\n/*\r\nfunction drawCasesSymptomsVegaLite() {\r\n  const cases = vl.markLine({color: 'teal'})\r\n    .data(newcases)\r\n    .transform(\r\n      vl.groupby('TimePeriodLabel').\r\n        aggregate(vl.sum('newcases').as('period_cases')),\r\n    )\r\n    .encode(\r\n      vl.x({title: 'Time Period'}).fieldO('TimePeriodLabel').sort(time_periods),\r\n      vl.y({title: 'New COVID-19 Cases'}).fieldQ('period_cases')\r\n    ).width(500).height(240)\r\n\r\n  const mh = vl.markLine()\r\n    .data(merge)\r\n    .encode(\r\n      vl.x({title: 'Time Period'}).fieldO('TimePeriodLabel').sort(time_periods),\r\n      vl.y({title: 'Percentage of population'}).fieldQ('Value'),\r\n      vl.color().fieldN('SymptomType').legend({orient: 'bottom', title: 'Symptom Type'}),\r\n      vl.tooltip().fieldQ('Value'),\r\n  ).width(500).height(240)\r\n\r\n  return vl.layer(cases, mh)\r\n      .resolve({scale: {y: \"independent\"}})\r\n      .title('New COVID-19 Cases and Symptoms of Anxiety and Depressive Disorder, Apr 2020 - Feb 2021')\r\n      .render()\r\n      .then(viewElement => {\r\n        document.getElementById('cases-mh').appendChild(viewElement);\r\n    });\r\n}\r\n*/\r\n\r\n"]}
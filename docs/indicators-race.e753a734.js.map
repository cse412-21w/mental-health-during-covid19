{"version":3,"sources":["indicators-race.js"],"names":["races","indicators","cdcArray","citySet","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","anxiety_gender","then","data","forEach","d","push","includes","city","drawLineVegaLite","markLine","encode","x","fieldO","y","fieldQ","color","fieldN","width","height","render","viewElement","document","getElementById","appendChild"],"mappings":";;AAAA;;;;AAA6D;AAC7D,cAAkB;AACA;;;AAElB,IAAIA,KAAK,GAAGA,KAAK,GAAG,CAAC,oBAAD,EAAuB,iCAAvB,EAA0D,iCAA1D,EACpB,iCADoB,EACe,8CADf,CAApB,EACsF;;AACtF,IAAIC,UAAU,GAAG,CAAC,iCAAD,EAAoC,8BAApC,EACjB,qDADiB,CAAjB;AAEA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,OAAO,GAAG,EAAd;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,CACN;AADM,GADM;AAIdC,EAAAA,IAAI,EAAE,cAACC,IAAD,EAAU;AACd;AACAA,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAIC,WAAW,CAACC,OAAhB,GAA0BC,IAAvC;AACD,GAPa;AAQdJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE;AANN;AARQ,CAAhB;AAkBAC,EAAE,CAACC,QAAH,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4BZ,OAA5B,GAEA;;AACAa,EAAE,CAACC,GAAH,CAAOC,uBAAP,EAAuBC,IAAvB,CAA4B,UAASC,IAAT,EAAe;AACzCA,EAAAA,IAAI,CAACC,OAAL,CAAa,UAASC,CAAT,EAAW;AACtBrB,IAAAA,QAAQ,CAACsB,IAAT,CAAcD,CAAd;;AACA,QAAI,CAACpB,OAAO,CAACsB,QAAR,CAAiBF,CAAC,CAACG,IAAnB,CAAL,EAA+B;AAC7BvB,MAAAA,OAAO,CAACqB,IAAR,CAAaD,CAAC,CAACG,IAAf;AACD;AACF,GALD;AAMAC,EAAAA,gBAAgB;AACjB,CARD;AAUA;AACA;AACA;AACA;AACA;;AAGA,SAASA,gBAAT,GAA4B;AAC1B;AACA;AACAd,EAAAA,EAAE,CAACe,QAAH,GACCP,IADD,CACMF,uBADN,EAECU,MAFD,CAGEhB,EAAE,CAACiB,CAAH,GAAOC,MAAP,CAAc,iBAAd,CAHF,EAIElB,EAAE,CAACmB,CAAH,GAAOC,MAAP,CAAc,OAAd,CAJF,EAKEpB,EAAE,CAACqB,KAAH,GAAWC,MAAX,CAAkB,UAAlB,CALF,EAMEtB,EAAE,CAACL,OAAH,CAAW,OAAX,CANF,EAQC4B,KARD,CAQO,GARP,EASCC,MATD,CASQ,GATR,EAUCC,MAVD,GAWClB,IAXD,CAWM,UAAAmB,WAAW,EAAI;AACnB;AACA;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,WAAnC,CAA+CH,WAA/C;AACD,GAfD;AAgBD","file":"indicators-race.e753a734.js","sourceRoot":"..\\docs","sourcesContent":["import anxiety_gender from '../static/anxiety_gender.csv'    // import dataset\r\n\"use strict\";     // the code should be executed in \"strict mode\".\r\n                  // With strict mode, you can not, for example, use undeclared variables\r\n\r\nvar races = races = ['Hispanic or Latino', 'Non-Hispanic white, single race', 'Non-Hispanic black, single race',\r\n'Non-Hispanic Asian, single race', 'Non-Hispanic, other races and multiple races'];   // used to store data later\r\nvar indicators = ['Symptoms of Depressive Disorder', 'Symptoms of Anxiety Disorder', \r\n'Symptoms of Anxiety Disorder or Depressive Disorder'];\r\nvar cdcArray = [];\r\nvar citySet = [];\r\n\r\nconst options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\n// Again, We use d3.csv() to process data\r\nd3.csv(anxiety_gender).then(function(data) {\r\n  data.forEach(function(d){\r\n    cdcArray.push(d);\r\n    if (!citySet.includes(d.city)) {\r\n      citySet.push(d.city);\r\n    }\r\n  })\r\n  drawLineVegaLite();\r\n});\r\n\r\n/*anxiety_gender = cdchealth\r\n.filter(d => op.includes(d.Group, 'By Gender'))\r\n.filter(d => op.equal(d.Indicator, 'Symptoms of Anxiety Disorder'))\r\n.filter(d => !op.includes(d.TimePeriodLabel, 'July 22 - Aug 18'))\r\n.filter(d => !op.includes(d.TimePeriodLabel, 'Dec 22 - Jan 5')) */\r\n\r\n\r\nfunction drawLineVegaLite() {\r\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\r\n  // your visualization goes here\r\n  vl.markLine()\r\n  .data(anxiety_gender)\r\n  .encode(\r\n    vl.x().fieldO('TimePeriodLabel'),\r\n    vl.y().fieldQ('Value'),\r\n    vl.color().fieldN('Subgroup'),\r\n    vl.tooltip('Value')\r\n  )\r\n  .width(450)\r\n  .height(450)\r\n  .render()\r\n  .then(viewElement => {\r\n    // render returns a promise to a DOM element containing the chart\r\n    // viewElement.value contains the Vega View object instance\r\n    document.getElementById('anxiety').appendChild(viewElement);\r\n  });\r\n}"]}
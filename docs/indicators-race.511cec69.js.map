{"version":3,"sources":["indicators-race.js"],"names":["races","indicators","cdcArray","cdcArray2","time_periods","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","anxiety_gender","then","data","forEach","d","push","drawAnxietyGenderVegaLite","all_race","drawIndicatorsRaceVegaLite","markLine","encode","x","fieldO","y","fieldQ","color","fieldN","width","height","render","viewElement","document","getElementById","appendChild","selection","selectSingle","fields","Indicator","Subgroup","bind","menu","markCircle","title","select","sort","opacity","if","value"],"mappings":"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","file":"indicators-race.511cec69.js","sourceRoot":"..\\testsrc","sourcesContent":["import anxiety_gender from '../static/anxiety_gender.csv';\r\nimport all_race from '../static/all_race.csv';   // import dataset\r\n\"use strict\";     // the code should be executed in \"strict mode\".\r\n                  // With strict mode, you can not, for example, use undeclared variables\r\n\r\nvar races = races = ['Hispanic or Latino', 'Non-Hispanic white, single race', 'Non-Hispanic black, single race',\r\n'Non-Hispanic Asian, single race', 'Non-Hispanic, other races and multiple races'];   // used to store data later\r\nvar indicators = ['Symptoms of Depressive Disorder', 'Symptoms of Anxiety Disorder', \r\n'Symptoms of Anxiety Disorder or Depressive Disorder'];\r\nvar cdcArray = [];\r\nvar cdcArray2 = [];\r\nvar time_periods = ['Apr 23 - May 5', 'May 7 - May 12', 'May 14 - May 19', 'May 21 - May 26',\r\n                'May 28 - June 2', 'June 4 - June 9', 'June 11 - June 16', 'June 18 - June 23', \r\n                'June 25 - June 30', 'July 2 - July 7', 'July 9 - July 14', 'July 16 - July 21',\r\n                'Aug 19 - Aug 31', 'Sep 2 - Sep 14', 'Sep 16 - Sep 28', 'Sep 30 - Oct 12',\r\n                'Oct 14 - Oct 26', 'Oct 28 - Nov 9', 'Nov 11 - Nov 23', 'Nov 25 - Dec 7', \r\n                'Dec 9 - Dec 21', 'Jan 6 - Jan 18', 'Jan 20 - Feb 1'];\r\n\r\nconst options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\n// Again, We use d3.csv() to process data\r\nd3.csv(anxiety_gender).then(function(data) {\r\n  data.forEach(function(d){\r\n    cdcArray.push(d);\r\n    //if (!citySet.includes(d.city)) {\r\n    //  citySet.push(d.city);\r\n    //}\r\n  })\r\n  drawAnxietyGenderVegaLite();\r\n});\r\n\r\nd3.csv(all_race).then(function(data) {\r\n  data.forEach(function(d){\r\n    cdcArray2.push(d);\r\n  })\r\n  drawIndicatorsRaceVegaLite();\r\n}); \r\n\r\n/*anxiety_race = cdchealth\r\n.filter(d => op.includes(d.Group, 'By Race/Hispanic Ethnicity'))\r\n.filter(d => op.equal(d.Indicator, 'Symptoms of Anxiety Disorder'))\r\n.filter(d => !op.includes(d.TimePeriodLabel, 'July 22 - Aug 18'))\r\n.filter(d => !op.includes(d.TimePeriodLabel, 'Dec 22 - Jan 5')) */\r\n\r\n\r\nfunction drawAnxietyGenderVegaLite() {\r\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\r\n  // your visualization goes here\r\n  vl.markLine()\r\n  .data(anxiety_gender)\r\n  .encode(\r\n    vl.x().fieldO('TimePeriodLabel'),\r\n    vl.y().fieldQ('Value'),\r\n    vl.color().fieldN('Subgroup'),\r\n    vl.tooltip('Value')\r\n  )\r\n  .width(450)\r\n  .height(450)\r\n  .render()\r\n  .then(viewElement => {\r\n    // render returns a promise to a DOM element containing the chart\r\n    // viewElement.value contains the Vega View object instance\r\n    document.getElementById('anxiety').appendChild(viewElement);\r\n  });\r\n}\r\n\r\nfunction drawIndicatorsRaceVegaLite() {\r\n  const selection = vl.selectSingle('Select')\r\n    .fields('Indicator', 'Subgroup')\r\n    .init({Indicator: 'Symptoms of Anxiety Disorder', Subgroup: 'Non-Hispanic black, single race'})\r\n    .bind({Indicator: vl.menu(indicators), Subgroup: vl.menu(races)});\r\n           \r\n     vl.markCircle()\r\n    .data(all_race)\r\n    .title('Symptoms of Anxiety and Depressive Disorder, April 2020 - February 2021')\r\n    .select(selection)\r\n    .encode(\r\n      vl.x({title: 'Time Period'}).fieldO('TimePeriodLabel').sort(time_periods),\r\n      vl.y({title: 'Percentage of population'}).fieldQ('Value'),\r\n      vl.tooltip().fieldQ('Value'),\r\n      vl.color().fieldN('Subgroup'),\r\n      vl.opacity().if(selection, vl.value(1)).value(0)\r\n    )\r\n    .width(450)\r\n    .height(450)\r\n    .render()\r\n    .then(viewElement => {\r\n    document.getElementById('ind-race').appendChild(viewElement);\r\n  });\r\n}"]}
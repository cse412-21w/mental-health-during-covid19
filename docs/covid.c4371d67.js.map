{"version":3,"sources":["javasript/covid.js"],"names":["options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","dataArray","stateArray","d3","csv","casedata","then","data","forEach","d","parseDate","utcParse","date","state","cases","deaths","push","includes","drawLineVegaLite","sort","selection","selectSingle","fields","bind","menu","markLine","select","transform","filter","encode","x","fieldT","y","fieldQ","width","height","death","hconcat","spacing","render","viewElement","document","getElementById","appendChild"],"mappings":"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","file":"covid.c4371d67.js","sourceRoot":"../src","sourcesContent":["import casedata from '../../static/us-states.csv'    // import dataset\n\"use strict\";     // the code should be executed in \"strict mode\".\n                  // With strict mode, you can not, for example, use undeclared variables\n\n\nconst options = {\n  config: {\n    // Vega-Lite default configuration\n  },\n  init: (view) => {\n    // initialize tooltip handler\n    view.tooltip(new vegaTooltip.Handler().call);\n  },\n  view: {\n    // view constructor options\n    // remove the loader if you don't want to default to vega-datasets!\n    //   loader: vega.loader({\n    //     baseURL: \"\",\n    //   }),\n    renderer: \"canvas\",\n  },\n};\n\nvl.register(vega, vegaLite, options);\n\nvar dataArray = []\nvar stateArray = []\n\nd3.csv(casedata).then(function(data) {\n  data.forEach(function(d){\n    const parseDate = d3.utcParse(\"%Y-%m-%d\");\n    var date = parseDate(d.date);\n    var state = d.state;\n    var cases = +d.cases;\n    var deaths = +d.deaths;\n    dataArray.push({date: date, state: state, cases: cases, deaths: deaths})\n    if (!stateArray.includes(state)) {\n      stateArray.push(state)\n    }\n  })\n  drawLineVegaLite();\n});\n\nstateArray = stateArray.sort();\n\nfunction drawLineVegaLite() {\n\n  const selection = vl.selectSingle('Select')\n    .fields('state')\n    .init({'state': stateArray[0]})\n    .bind(vl.menu(stateArray))\n\n  const cases = vl.markLine()\n      .data(dataArray)\n      .select(selection)\n      .transform(\n        vl.filter(selection)\n      )\n      .encode(\n        vl.x().fieldT('date'),\n        vl.y().fieldQ('cases'),\n        vl.tooltip(['date', 'cases'])\n      )\n      .width(400)\n      .height(450);\n\n    const death = vl.markLine()\n        .data(dataArray)\n        .select(selection)\n        .transform(\n          vl.filter(selection)\n        )\n        .encode(\n          vl.x().fieldT('date'),\n          vl.y().fieldQ('deaths'),\n          vl.tooltip(['date', 'deaths'])\n        )\n        .width(400)\n        .height(450);\n\n  return vl.hconcat(cases, death).spacing(5)\n    .render()\n    .then(viewElement => {\n      // render returns a promise to a DOM element containing the chart\n      // viewElement.value contains the Vega View object instance\n      document.getElementById('covid-data').appendChild(viewElement);\n    });\n}"]}
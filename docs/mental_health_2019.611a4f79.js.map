{"version":3,"sources":["javasript/mental_health_2019.js"],"names":["options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","dataArray","drawLineVegaLite","markBar","data","mhdata","encode","column","fieldN","spacing","title","y","fieldQ","x","sort","axis","color","width","height","render","then","viewElement","document","getElementById","appendChild"],"mappings":";;AAAA;;;;AAA4D;AAC5D,cAAkB;AACA;;;AAElB,IAAMA,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,CACN;AADM,GADM;AAIdC,EAAAA,IAAI,EAAE,cAACC,IAAD,EAAU;AACd;AACAA,IAAAA,IAAI,CAACC,OAAL,CAAa,IAAIC,WAAW,CAACC,OAAhB,GAA0BC,IAAvC;AACD,GAPa;AAQdJ,EAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACA;AACA;AACAK,IAAAA,QAAQ,EAAE;AANN;AARQ,CAAhB;AAkBAC,EAAE,CAACC,QAAH,CAAYC,IAAZ,EAAkBC,QAAlB,EAA4BZ,OAA5B;AAEA,IAAIa,SAAS,GAAG,EAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,gBAAgB;;AAChB,SAASA,gBAAT,GAA4B;AAE1BL,EAAAA,EAAE,CAACM,OAAH,GACGC,IADH,CACQC,uBADR,EAEGC,MAFH,CAGMT,EAAE,CAACU,MAAH,GAAYC,MAAZ,CAAmB,MAAnB,EAA2BC,OAA3B,CAAmC,EAAnC,EAAuCC,KAAvC,CAA6C,IAA7C,CAHN,EAIMb,EAAE,CAACc,CAAH,GAAOC,MAAP,CAAc,YAAd,CAJN,EAKMf,EAAE,CAACgB,CAAH,GAAOL,MAAP,CAAc,MAAd,EACGM,IADH,CACQjB,EAAE,CAACe,MAAH,CAAU,YAAV,CADR,EAEGG,IAFH,CAEQ;AAACL,IAAAA,KAAK,EAAE;AAAR,GAFR,CALN,EAQMb,EAAE,CAACmB,KAAH,GAAWR,MAAX,CAAkB,MAAlB,CARN,EASMX,EAAE,CAACL,OAAH,CAAW,CAACK,EAAE,CAACW,MAAH,CAAU,MAAV,CAAD,EAAoBX,EAAE,CAACe,MAAH,CAAU,YAAV,CAApB,CAAX,CATN,EAWGK,KAXH,CAWS,GAXT,EAYGC,MAZH,CAYU,GAZV,EAaGC,MAbH,GAcGC,IAdH,CAcQ,UAAAC,WAAW,EAAI;AACjB;AACA;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,WAAlC,CAA8CH,WAA9C;AACH,GAlBH;AAmBD","file":"mental_health_2019.611a4f79.js","sourceRoot":"..\\src","sourcesContent":["import mhdata from '../../static/mental_health_2019.csv'    // import dataset\r\n\"use strict\";     // the code should be executed in \"strict mode\".\r\n                  // With strict mode, you can not, for example, use undeclared variables\r\n\r\nconst options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\nvar dataArray = []\r\n/*\r\nd3.csv(mhdata).then(function(data) {\r\n  data.forEach(function(d){\r\n    var type = d.type;\r\n    var race = +d.race;\r\n    var percentage = +d.percentage;\r\n    dataArray.push({type: type, race: race, percentage: percentage})\r\n  })\r\n  drawLineVegaLite();\r\n});*/\r\ndrawLineVegaLite();\r\nfunction drawLineVegaLite() {\r\n\r\n  vl.markBar()\r\n    .data(mhdata)\r\n    .encode(\r\n        vl.column().fieldN('type').spacing(10).title(null),\r\n        vl.y().fieldQ('percentage'),\r\n        vl.x().fieldN('race')\r\n          .sort(vl.fieldQ('percentage'))\r\n          .axis({title: null}),\r\n        vl.color().fieldN('race'),\r\n        vl.tooltip([vl.fieldN('race'), vl.fieldQ('percentage')])\r\n    )\r\n    .width(150)\r\n    .height(400)\r\n    .render()\r\n    .then(viewElement => {\r\n        // render returns a promise to a DOM element containing the chart\r\n        // viewElement.value contains the Vega View object instance\r\n        document.getElementById('md2019').appendChild(viewElement);\r\n    })\r\n}"]}